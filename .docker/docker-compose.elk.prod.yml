services:
  mysql:
    image: 'mysql:8.0.27'
    restart: 'always'
    command:
      - '--default-authentication-plugin=mysql_native_password'
      - '--character-set-server=utf8mb4'
      - '--collation-server=utf8mb4_unicode_ci'
    environment:
      TZ: '${TZ}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_USER_PASSWORD}'
    volumes:
      - '../.data/mysql:/var/lib/mysql'
      - './mysql/mysql.cnf:/etc/mysql/conf.d/custom.cnf'
    ports:
      - '${MYSQL_PORT}:3306'
    networks:
      - compose-networks

  redis:
    image: 'redis:8.0.3-alpine3.21'
    restart: 'always'
    command: 'redis-server --requirepass ${REDIS_PASSWORD}'
    environment:
      TZ: '${TZ}'
    ports:
      - '${REDIS_PORT}:6379'
    networks:
      - compose-networks

  meilisearch:
    image: 'getmeili/meilisearch:v${MEILISEARCH_VERSION}'
    restart: 'always'
    environment:
      TZ: '${TZ}'
      MEILI_MASTER_KEY: '${MEILISEARCH_PASSWORD}'
    ports:
      - '${MEILISEARCH_PORT}:7700'
    networks:
      - compose-networks

  elasticsearch:
    image: 'elasticsearch:${ELK_STACK_VERSION}'
    environment:
      - discovery.type=single-node
      - xpack.security.http.ssl.enabled=false
      - xpack.security.enabled=false
    ports:
      - '${ELASTICSEARCH_PORT}:9200'
    networks:
      - compose-networks

  filebeat:
    image: 'elastic/filebeat:${ELK_STACK_VERSION}'
    volumes:
      - './filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml'
      - '../backend/storage/logs:/var/storage/logs'
    depends_on:
      - elasticsearch
    networks:
      - compose-networks

  kibana:
    image: 'kibana:${ELK_STACK_VERSION}'
    environment:
      ELASTICSEARCH_HOSTS: 'http://elasticsearch:9200'
    ports:
      - '${KIBANA_PORT}:5601'
    networks:
      - compose-networks

  php:
    build: php
    restart: 'always'
    environment:
      TZ: '${TZ}'
    volumes:
      - '../backend:/var/www/backend'
      - './php/php.prod.ini:/usr/local/etc/php/conf.d/php.prod.ini'
      - './php/php-fpm.prod.conf:/usr/local/etc/php-fpm.d/php-fpm.prod.conf'
      - './php/crontab:/etc/cron.d/crontab'
      - './php/horizon.conf:/etc/supervisor/conf.d/horizon.conf'
    depends_on:
      - mysql
      - redis
    networks:
      - compose-networks

  nginx:
    image: 'lscr.io/linuxserver/swag:4.0.0'
    restart: 'always'
    environment:
      TZ: '${TZ}'
      PUID: '1000'
      PGID: '1000'
      URL: '${NGINX_DOMAIN}'
      VALIDATION: 'http'
      STAGING: 'false'
    volumes:
      - '../backend:/var/www/backend'
      - './nginx/prod.conf:/config/nginx/site-confs/default.conf'
    ports:
      - '${NGINX_HTTP_PORT}:80'
      - '${NGINX_HTTPS_PORT}:443'
    networks:
      - compose-networks
    depends_on:
      - mysql
      - redis
      - php
    healthcheck:
      test: wget --no-verbose --tries=1 --spider https://${NGINX_DOMAIN}:${NGINX_HTTP_PORT} || exit 1
      interval: 60s
      retries: 3
      start_period: 180s
      timeout: 20s

networks:
  compose-networks:
    external: true
